{"ast":null,"code":"import React,{useState}from'react';import'./InputForm.css';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const InputForm=()=>{const getButtonClass=()=>{const inputLength=input.length;if(inputLength>0&&inputLength<=800){return{className:'greenButton',disabled:false};}return{className:'grayButton',disabled:true};};const[input,setInput]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();try{// const response = await axios.post('/api/classify', { input:input });\n// console.log(response.data);\n// navigate('/', { state: response.data });\nnavigate('/Tags',{state:{input}});// You can pass the response data to the TagsForm component here\n}catch(error){console.error(error);}};const{className,disabled}=getButtonClass();return/*#__PURE__*/_jsxs(\"div\",{className:\"InputForm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"slider\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"line\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ellipse\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner-circle\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ellipse\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ellipse\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ellipse\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"input\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"input\",id:\"description\",children:\"Type your problems description here\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"inputTextArea\",name:\"input\",value:input,onChange:e=>setInput(e.target.value)}),/*#__PURE__*/_jsxs(\"p\",{className:\"input\",id:\"length\",children:[input.length,\"/800\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"SetParam \".concat(className),disabled:disabled,children:\"Set Parameters\"})]})]});};export default InputForm;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","InputForm","getButtonClass","inputLength","input","length","className","disabled","setInput","navigate","handleSubmit","e","preventDefault","state","error","console","children","onSubmit","id","name","value","onChange","target","type","concat"],"sources":["C:/Users/chann/OneDrive/Рабочий стол/diploma/my-app2/src/components/InputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './InputForm.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst InputForm = () => {\r\n  const getButtonClass = () => {\r\n    const inputLength = input.length;\r\n    if (inputLength > 0 && inputLength <= 800) {\r\n      return {\r\n        className: 'greenButton',\r\n        disabled: false,\r\n      };\r\n    }\r\n    return {\r\n      className: 'grayButton',\r\n      disabled: true,\r\n    };\r\n  }\r\n  const [input, setInput] = useState('');\r\n  const navigate = useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // const response = await axios.post('/api/classify', { input:input });\r\n      // console.log(response.data);\r\n      // navigate('/', { state: response.data });\r\n      navigate('/Tags', { state: { input } });\r\n      // You can pass the response data to the TagsForm component here\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const { className, disabled } = getButtonClass();\r\n  return (\r\n    <div className=\"InputForm\">\r\n      <div className=\"slider\">\r\n        <div className=\"line\"></div>\r\n        <div className=\"ellipse\">\r\n          <div className=\"inner-circle\"></div>\r\n        </div>\r\n        <div className=\"ellipse\"></div>\r\n        <div className=\"ellipse\"></div>\r\n        <div className=\"ellipse\"></div>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className='input'>\r\n        <p className='input' id=\"description\">Type your problems description here</p>\r\n        <textarea\r\n          id=\"inputTextArea\"\r\n          name=\"input\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <p className='input' id='length'>{input.length}/800</p>\r\n        <button type=\"submit\" className={`SetParam ${className}`} disabled={disabled}>Set Parameters</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,iBAAiB,CACxB,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,WAAW,CAAGC,KAAK,CAACC,MAAM,CAChC,GAAIF,WAAW,CAAG,CAAC,EAAIA,WAAW,EAAI,GAAG,CAAE,CACzC,MAAO,CACLG,SAAS,CAAE,aAAa,CACxBC,QAAQ,CAAE,KACZ,CAAC,CACH,CACA,MAAO,CACLD,SAAS,CAAE,YAAY,CACvBC,QAAQ,CAAE,IACZ,CAAC,CACH,CAAC,CACD,KAAM,CAACH,KAAK,CAAEI,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAc,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CACF;AACA;AACA;AACAH,QAAQ,CAAC,OAAO,CAAE,CAAEI,KAAK,CAAE,CAAET,KAAM,CAAE,CAAC,CAAC,CACvC;AACF,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACtB,CACF,CAAC,CACD,KAAM,CAAER,SAAS,CAAEC,QAAS,CAAC,CAAGL,cAAc,CAAC,CAAC,CAChD,mBACEF,KAAA,QAAKM,SAAS,CAAC,WAAW,CAAAU,QAAA,eACxBhB,KAAA,QAAKM,SAAS,CAAC,QAAQ,CAAAU,QAAA,eACrBlB,IAAA,QAAKQ,SAAS,CAAC,MAAM,CAAM,CAAC,cAC5BR,IAAA,QAAKQ,SAAS,CAAC,SAAS,CAAAU,QAAA,cACtBlB,IAAA,QAAKQ,SAAS,CAAC,cAAc,CAAM,CAAC,CACjC,CAAC,cACNR,IAAA,QAAKQ,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BR,IAAA,QAAKQ,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BR,IAAA,QAAKQ,SAAS,CAAC,SAAS,CAAM,CAAC,EAC5B,CAAC,cACNN,KAAA,SAAMiB,QAAQ,CAAEP,YAAa,CAACJ,SAAS,CAAC,OAAO,CAAAU,QAAA,eAC7ClB,IAAA,MAAGQ,SAAS,CAAC,OAAO,CAACY,EAAE,CAAC,aAAa,CAAAF,QAAA,CAAC,qCAAmC,CAAG,CAAC,cAC7ElB,IAAA,aACEoB,EAAE,CAAC,eAAe,CAClBC,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEhB,KAAM,CACbiB,QAAQ,CAAGV,CAAC,EAAKH,QAAQ,CAACG,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE,CAC3C,CAAC,cACFpB,KAAA,MAAGM,SAAS,CAAC,OAAO,CAACY,EAAE,CAAC,QAAQ,CAAAF,QAAA,EAAEZ,KAAK,CAACC,MAAM,CAAC,MAAI,EAAG,CAAC,cACvDP,IAAA,WAAQyB,IAAI,CAAC,QAAQ,CAACjB,SAAS,aAAAkB,MAAA,CAAclB,SAAS,CAAG,CAACC,QAAQ,CAAEA,QAAS,CAAAS,QAAA,CAAC,gBAAc,CAAQ,CAAC,EACjG,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}