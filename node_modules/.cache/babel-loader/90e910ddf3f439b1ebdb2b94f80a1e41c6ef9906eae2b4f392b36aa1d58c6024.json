{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chann\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\diploma\\\\my-app2\\\\src\\\\components\\\\InputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './InputForm.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputForm = () => {\n  _s();\n  const getButtonClass = () => {\n    const inputLength = input.length;\n    if (inputLength > 0 && inputLength <= 800) {\n      return {\n        className: 'greenButton',\n        disabled: false\n      };\n    }\n    return {\n      className: 'grayButton',\n      disabled: true\n    };\n  };\n  const [input, setInput] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // const response = await axios.post('/api/classify', { input:input });\n      // console.log(response.data);\n      // navigate('/', { state: response.data });\n      navigate('/Tags', {\n        state: {\n          input\n        }\n      });\n      // You can pass the response data to the TagsForm component here\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const {\n    className,\n    disabled\n  } = getButtonClass();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InputForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ellipse\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ellipse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ellipse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ellipse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input\",\n        id: \"description\",\n        children: \"Type your problems description here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"inputTextArea\",\n        name: \"input\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input\",\n        id: \"length\",\n        children: [input.length, \"/800\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `SetParam ${className}`,\n        disabled: disabled,\n        children: \"Set Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(InputForm, \"AuPX+awibUVdb9buQGCVkcII3I0=\", false, function () {\n  return [useNavigate];\n});\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InputForm","_s","getButtonClass","inputLength","input","length","className","disabled","setInput","navigate","handleSubmit","e","preventDefault","state","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","name","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/chann/OneDrive/Рабочий стол/diploma/my-app2/src/components/InputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './InputForm.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst InputForm = () => {\r\n  const getButtonClass = () => {\r\n    const inputLength = input.length;\r\n    if (inputLength > 0 && inputLength <= 800) {\r\n      return {\r\n        className: 'greenButton',\r\n        disabled: false,\r\n      };\r\n    }\r\n    return {\r\n      className: 'grayButton',\r\n      disabled: true,\r\n    };\r\n  }\r\n  const [input, setInput] = useState('');\r\n  const navigate = useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // const response = await axios.post('/api/classify', { input:input });\r\n      // console.log(response.data);\r\n      // navigate('/', { state: response.data });\r\n      navigate('/Tags', { state: { input } });\r\n      // You can pass the response data to the TagsForm component here\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const { className, disabled } = getButtonClass();\r\n  return (\r\n    <div className=\"InputForm\">\r\n      <div className=\"slider\">\r\n        <div className=\"line\"></div>\r\n        <div className=\"ellipse\">\r\n          <div className=\"inner-circle\"></div>\r\n        </div>\r\n        <div className=\"ellipse\"></div>\r\n        <div className=\"ellipse\"></div>\r\n        <div className=\"ellipse\"></div>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className='input'>\r\n        <p className='input' id=\"description\">Type your problems description here</p>\r\n        <textarea\r\n          id=\"inputTextArea\"\r\n          name=\"input\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <p className='input' id='length'>{input.length}/800</p>\r\n        <button type=\"submit\" className={`SetParam ${className}`} disabled={disabled}>Set Parameters</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}